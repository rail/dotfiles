#!/bin/bash
# git-mkpatch
PATCHDIR=/tmp
set -e
tmpfile=$(mktemp)
trap "rm -rf $tmpfile" EXIT

# What's our branch name?
branch=$(git symbolic-ref HEAD)
branch=${branch##refs/heads/}

# What repo are we in?
repo=$(basename $(git rev-parse --show-toplevel))
repo=${repo%%.git}

# Do the magic
git diff -U8 @{upstream}... > $tmpfile

# Check if we've done this before
shopt -s nullglob
for f in $PATCHDIR/$branch-$repo*.diff; do
    if (cmp $tmpfile $f > /dev/null 2>&1); then
        echo "Patch is the same as $f"
        exit
    fi
done

# What should the patch be called?
dest=$PATCHDIR/$branch-$repo.diff

count=1
while [ -f $dest ]; do
    dest=$PATCHDIR/$branch-$repo-$count.diff
    count=$((count + 1))
done
mv $tmpfile $dest
if [ "$(stat -c '%s' $dest)" = "0" ]; then
    echo "The patch is zero size. Looks like you are done with this branch"
fi
echo $dest
echo $dest | xclip -selection clipboard
